<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="30:/home/ubuntu/workspace/Proj1Test/src/lib/modules/TransportP.nc">
      <from><interface-ref name="update" scoped="" ref="0x404411e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40353718"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/ubuntu/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40353718"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c6670"/></to>
    </wire>
    <wire loc="53:/home/ubuntu/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40349010"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403c8df0"/></to>
    </wire>
    <wire loc="55:/home/ubuntu/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403cb310"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4034ebe8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TransportP" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/modules/TransportP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/ubuntu/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/ubuntu/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/ubuntu/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="Transport" ref="0x40428f18" loc="7:/home/ubuntu/workspace/Proj1Test/src/lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Transport" scoped="" ref="0x40428f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Transport"/>
      </instance>
      <interface-functions>
        <function-ref name="listen" scoped="" ref="0x40424108"/>
        <function-ref name="receive" scoped="" ref="0x404241e8"/>
        <function-ref name="release" scoped="" ref="0x404242c8"/>
        <function-ref name="bind" scoped="" ref="0x404243a8"/>
        <function-ref name="read" scoped="" ref="0x40424488"/>
        <function-ref name="socket" scoped="" ref="0x40424568"/>
        <function-ref name="connect" scoped="" ref="0x40424648"/>
        <function-ref name="accept" scoped="" ref="0x40424728"/>
        <function-ref name="write" scoped="" ref="0x40424808"/>
        <function-ref name="close" scoped="" ref="0x404248e8"/>
        <function-ref name="initUpdateTimer" scoped="" ref="0x404249c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="synTimer" ref="0x4043c780" loc="9:/home/ubuntu/workspace/Proj1Test/src/lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="synTimer" scoped="" ref="0x4043c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403a4c50"/>
            <typename><typedef-ref name="TMilli" ref="0x403a4e18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4043b330"/>
        <function-ref name="fired" scoped="" ref="0x40430520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40430c28"/>
        <function-ref name="isOneShot" scoped="" ref="0x404309d0"/>
        <function-ref name="getdt" scoped="" ref="0x4043b7e0"/>
        <function-ref name="gett0" scoped="" ref="0x4043b588"/>
        <function-ref name="isRunning" scoped="" ref="0x40430778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4043cda8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4043b010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40430048"/>
        <function-ref name="stop" scoped="" ref="0x404302c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FloodSend" ref="0x40439588" loc="8:/home/ubuntu/workspace/Proj1Test/src/lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FloodSend" scoped="" ref="0x40439588"/></type-interface>
      <instance>
        <interfacedef-ref qname="FloodSend"/>
      </instance>
      <interface-functions>
        <function-ref name="neighborSize" scoped="" ref="0x40423a30"/>
        <function-ref name="HistoryPushBack" scoped="" ref="0x40439840"/>
        <function-ref name="NeighborPrintNeighbors" scoped="" ref="0x40439920"/>
        <function-ref name="HistoryIncrementSeq" scoped="" ref="0x40439a00"/>
        <function-ref name="makePack" scoped="" ref="0x40439ae0"/>
        <function-ref name="handlePing" scoped="" ref="0x40439bc0"/>
        <function-ref name="HistoryPrintHistory" scoped="" ref="0x40439ca0"/>
        <function-ref name="handleDV" scoped="" ref="0x40439d80"/>
        <function-ref name="refreshRT" scoped="" ref="0x40439e60"/>
        <function-ref name="NeighborDecrementNeighborPing" scoped="" ref="0x40423010"/>
        <function-ref name="getNeighbor" scoped="" ref="0x404230f0"/>
        <function-ref name="printRT" scoped="" ref="0x404231d0"/>
        <function-ref name="SimpleSendSend" scoped="" ref="0x404232b0"/>
        <function-ref name="HistoryListContains" scoped="" ref="0x40423410"/>
        <function-ref name="rtSize" scoped="" ref="0x404234f0"/>
        <function-ref name="populateRtngTabl" scoped="" ref="0x404235d0"/>
        <function-ref name="handlePingReply" scoped="" ref="0x404236b0"/>
        <function-ref name="NeighborRefreshNeighbors" scoped="" ref="0x40423790"/>
        <function-ref name="makePair" scoped="" ref="0x40423870"/>
        <function-ref name="writeToPayloadFromRT" scoped="" ref="0x40439760"/>
        <function-ref name="NeighborsClearAll" scoped="" ref="0x40423950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="update" ref="0x404411e8" loc="30:/home/ubuntu/workspace/Proj1Test/src/lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="update" scoped="" ref="0x404411e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404413c0"/>
        <function-ref name="runTask" scoped="" ref="0x404414a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40353718" loc="48:/home/ubuntu/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40353718"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403538f0"/>
        <function-ref name="runTask" scoped="" ref="0x403539d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40349010" loc="47:/home/ubuntu/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40349010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403491e8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403492c8"/>
        <function-ref name="runNextTask" scoped="" ref="0x403493a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403c6670" loc="56:/home/ubuntu/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403c6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403c6848"/>
        <function-ref name="runTask" scoped="" ref="0x403c6928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403cb310" loc="57:/home/ubuntu/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403cb310"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403cb4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403c8df0" loc="55:/home/ubuntu/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403c8df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403c6010"/>
        <function-ref name="taskLoop" scoped="" ref="0x403c60f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403c61d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403da6b0" loc="54:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403da6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403da888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4034ebe8" loc="50:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4034ebe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4034edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403dd8b8" loc="51:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403dd8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403dda90"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Transport" loc="4:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
      <function command="" provided="0" name="listen" ref="0x40429368" loc="11:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40429210" loc="11:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x4042a460" loc="8:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40350748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:64" alignment="I:1"><nx_struct-ref name="pack" ref="0x403ec3b8"/>
                <typename><typedef-ref name="pack" ref="0x403eb0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="package" ref="0x4042a308" loc="8:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:64" alignment="I:1"><nx_struct-ref name="pack" ref="0x403ec3b8"/>
                <typename><typedef-ref name="pack" ref="0x403eb0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="release" ref="0x404289c8" loc="17:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40350748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40428870" loc="17:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x40426d38" loc="5:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40350748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x403f0d18"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x403ef620"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40426988" loc="5:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40426bd8" loc="5:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x403f0d18"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x403ef620"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x4042ade8" loc="9:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x4042a858" loc="9:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
          </variable>
          <variable name="buff" ref="0x4042aa68" loc="9:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bufflen" ref="0x4042ac80" loc="9:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="socket" ref="0x40428470" loc="16:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="connect" ref="0x40429b18" loc="13:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40350748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x403f0d18"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x403ef620"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40429768" loc="13:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x404299b8" loc="13:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x403f0d18"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x403ef620"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="accept" ref="0x40422508" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x403f0d18"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x403ef620"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40422158" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x404223a8" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x403f0d18"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x403ef620"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40422e98" loc="7:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40422908" loc="7:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
          </variable>
          <variable name="buff" ref="0x40422b18" loc="7:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bufflen" ref="0x40422d30" loc="7:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x40428088" loc="14:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40350748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40429f08" loc="14:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x403f5c78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initUpdateTimer" ref="0x40428db0" loc="19:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40437308" loc="53:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40437308"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4043da28" loc="136:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404368a8" loc="83:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4043ea00" loc="114:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4043e6b8" loc="114:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4043e8a0" loc="114:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4043e210" loc="98:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4043c3e8" loc="151:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4043de70" loc="144:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40436d38" loc="92:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40437960" loc="64:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40437808" loc="64:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4043d408" loc="129:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4043d0c0" loc="129:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4043d2a8" loc="129:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40436010" loc="73:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40437ea0" loc="73:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020e848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404364e0" loc="78:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/ubuntu/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FloodSend" loc="3:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
      <function command="" provided="0" name="writeToPayloadFromRT" ref="0x4043a360" loc="21:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payld" ref="0x4043a010" loc="21:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="ngbr" ref="0x4043a200" loc="21:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="HistoryPushBack" ref="0x40435dd8" loc="10:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x40424dd8"/>
              <typename><typedef-ref name="pair" ref="0x4042f268"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="one" ref="0x40435c80" loc="10:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x40424dd8"/>
              <typename><typedef-ref name="pair" ref="0x4042f268"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="NeighborPrintNeighbors" ref="0x40434870" loc="12:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="HistoryIncrementSeq" ref="0x40434440" loc="11:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x404342e8" loc="11:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makePack" ref="0x4042d5c8" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:64" alignment="I:1"><nx_struct-ref name="pack" ref="0x403ec3b8"/>
                <typename><typedef-ref name="pack" ref="0x403eb0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Package" ref="0x4042e560" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:64" alignment="I:1"><nx_struct-ref name="pack" ref="0x403ec3b8"/>
                <typename><typedef-ref name="pack" ref="0x403eb0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="src" ref="0x4042e750" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x4042e950" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </variable>
          <variable name="TTL" ref="0x4042eb40" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </variable>
          <variable name="protocol" ref="0x4042ed68" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </variable>
          <variable name="seq" ref="0x4042d010" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x4042d238" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4042d438" loc="6:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="handlePing" ref="0x4042fa10" loc="4:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:64" alignment="I:1"><nx_struct-ref name="pack" ref="0x403ec3b8"/>
                <typename><typedef-ref name="pack" ref="0x403eb0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x40424dd8"/>
              <typename><typedef-ref name="pair" ref="0x4042f268"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myMsg" ref="0x4042f6e8" loc="4:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:64" alignment="I:1"><nx_struct-ref name="pack" ref="0x403ec3b8"/>
                <typename><typedef-ref name="pack" ref="0x403eb0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="one" ref="0x4042f8b0" loc="4:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x40424dd8"/>
              <typename><typedef-ref name="pair" ref="0x4042f268"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="HistoryPrintHistory" ref="0x40433ca8" loc="16:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="handleDV" ref="0x4043ac40" loc="24:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:64" alignment="I:1"><nx_struct-ref name="pack" ref="0x403ec3b8"/>
                <typename><typedef-ref name="pack" ref="0x403eb0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myMsg" ref="0x4043aae8" loc="24:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:64" alignment="I:1"><nx_struct-ref name="pack" ref="0x403ec3b8"/>
                <typename><typedef-ref name="pack" ref="0x403eb0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="refreshRT" ref="0x40439420" loc="26:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="NeighborDecrementNeighborPing" ref="0x40433158" loc="14:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighbor" ref="0x40432b20" loc="19:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x404329c8" loc="19:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="printRT" ref="0x4043a708" loc="23:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="SimpleSendSend" ref="0x40433898" loc="15:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:64" alignment="I:1"><nx_struct-ref name="pack" ref="0x403ec3b8"/>
              <typename><typedef-ref name="pack" ref="0x403eb0c8"/></typename>
            </type-tag>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40433538" loc="15:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-tag size="I:64" alignment="I:1"><nx_struct-ref name="pack" ref="0x403ec3b8"/>
              <typename><typedef-ref name="pack" ref="0x403eb0c8"/></typename>
            </type-tag>
          </variable>
          <variable name="dest" ref="0x40433738" loc="15:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="HistoryListContains" ref="0x40435898" loc="9:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x40424dd8"/>
              <typename><typedef-ref name="pair" ref="0x4042f268"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="toFind" ref="0x40435740" loc="9:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x40424dd8"/>
              <typename><typedef-ref name="pair" ref="0x4042f268"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rtSize" ref="0x40432138" loc="17:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="populateRtngTabl" ref="0x40439070" loc="25:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="handlePingReply" ref="0x4042e170" loc="5:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:64" alignment="I:1"><nx_struct-ref name="pack" ref="0x403ec3b8"/>
                <typename><typedef-ref name="pack" ref="0x403eb0c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x40424dd8"/>
              <typename><typedef-ref name="pair" ref="0x4042f268"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myMsg" ref="0x4042fe30" loc="5:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:64" alignment="I:1"><nx_struct-ref name="pack" ref="0x403ec3b8"/>
                <typename><typedef-ref name="pack" ref="0x403eb0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="one" ref="0x4042e010" loc="5:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x40424dd8"/>
              <typename><typedef-ref name="pair" ref="0x4042f268"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="NeighborRefreshNeighbors" ref="0x40434cb8" loc="13:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makePair" ref="0x4042dec8" loc="7:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x40424dd8"/>
                <typename><typedef-ref name="pair" ref="0x4042f268"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pear" ref="0x4042d9a0" loc="7:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x40424dd8"/>
                <typename><typedef-ref name="pair" ref="0x4042f268"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="src" ref="0x4042db80" loc="7:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
            </type-int>
          </variable>
          <variable name="seq" ref="0x4042dd60" loc="7:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020db68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="NeighborsClearAll" ref="0x404352e0" loc="8:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="neighborSize" ref="0x40432560" loc="18:/home/ubuntu/workspace/Proj1Test/src/lib/interfaces/FloodSend.nc">
        <interfacedef-ref qname="FloodSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020e1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4034fc58" loc="67:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40350748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x403531a8" loc="75:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4034d3f0" loc="57:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4034dcf8" loc="72:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4034d830" loc="65:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034b6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403cb138" loc="76:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/ubuntu/local/tinyos-2.1.1/tos/platforms/btnode3/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2006-2007 ETH Zurich.&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;  @author Jan Beutel &#60;j.beutel@ieee.org>&#10; &#10;  $Id: hardware.h,v 1.9 2010-06-29 22:07:52 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403da350" loc="62:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4038c470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403dd640" loc="52:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/ubuntu/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
