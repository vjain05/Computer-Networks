<?xml version="1.0" ?><component abstract="" loc="51:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" nicename="tos.chips.atm128.timer.Atm128AlarmC" qname="Atm128AlarmC" safe="">
      <documentation loc="34:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>
 Build a TEP102 Alarm from an Atmega128 hardware timer and one of its
 compare registers.</short>
        <long>
 Build a TEP102 Alarm from an Atmega128 hardware timer and one of its
 compare registers.
 @param frequency_tag The frequency tag for this Alarm
 @param timer_size The width of this Alarm
 @param mindt The shortest time in the future this Alarm can be set
   (in its own time units). Has to be at least 2, as setting a compare
   register one above the current counter value is unreliable. Has to be
   large enough that the Alarm time does not pass between the computation
   of &lt;code&gt;expires&lt;/code&gt; and actually setting the compare register.
   Check this (for high-frequency timers) by inspecting the generated
   assembly code...

 @author Martin Turon &lt;mturon@xbow.com&gt;
 @author David Gay &lt;david.e.gay@intel.com&gt;
</long>
      </documentation>
      <parameters>
        <typedef loc="51:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" name="frequency_tag" ref="0x407aec20">
          <component-ref nicename="tos.chips.atm128.timer.Atm128AlarmC" qname="Atm128AlarmC"/>
          <type-var alignment="U:" size="U:"><typedef-ref name="frequency_tag" ref="0x407aec20" scoped=""/></type-var>
        </typedef>
        <typedef loc="52:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" name="timer_size" ref="0x407b7090">
          <component-ref nicename="tos.chips.atm128.timer.Atm128AlarmC" qname="Atm128AlarmC"/>
          <type-var alignment="U:" size="U:"><typedef-ref name="timer_size" ref="0x407b7090" scoped=""/></type-var>
        </typedef>
        <constant loc="53:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" name="mindt" ref="0x407b7250">
          <component-ref nicename="tos.chips.atm128.timer.Atm128AlarmC" qname="Atm128AlarmC"/>
          <type-int alignment="I:1" cname="int" size="I:2"/>
        </constant>
      </parameters>
      <module/>
    <specification><interface loc="55:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" name="Alarm" provided="1" ref="0x407b7bc0">
      <component-ref nicename="tos.chips.atm128.timer.Atm128AlarmC" qname="Atm128AlarmC"/>
      <type-interface alignment="I:1" size="I:2"><interface-ref name="Alarm" ref="0x407b7bc0" scoped=""/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x4034a3d0"/>
        <value-structured>
          <type-tag alignment="I:1" size="I:0"><attribute-ref name="atmostonce" ref="0x4034a3d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Alarm" qname="Alarm"/>
        <arguments>
          <type-var alignment="U:" size="U:"><typedef-ref name="frequency_tag" ref="0x407aec20" scoped=""/></type-var>
          <type-var alignment="U:" size="U:"><typedef-ref name="timer_size" ref="0x407b7090" scoped=""/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x407b40a8" scoped=""/>
        <function-ref name="fired" ref="0x407b6858" scoped=""/>
        <function-ref name="startAt" ref="0x407b6d48" scoped=""/>
        <function-ref name="isRunning" ref="0x407b6ad0" scoped=""/>
        <function-ref name="getAlarm" ref="0x407b4320" scoped=""/>
        <function-ref name="start" ref="0x407b6340" scoped=""/>
        <function-ref name="stop" ref="0x407b65e0" scoped=""/>
      </interface-functions>
    </interface><interface loc="58:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" name="HplAtm128Compare" provided="0" ref="0x407b2a88">
      <component-ref nicename="tos.chips.atm128.timer.Atm128AlarmC" qname="Atm128AlarmC"/>
      <type-interface alignment="I:1" size="I:2"><interface-ref name="HplAtm128Compare" ref="0x407b2a88" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.chips.atm128.timer.HplAtm128Compare" qname="HplAtm128Compare"/>
        <arguments>
          <type-var alignment="U:" size="U:"><typedef-ref name="timer_size" ref="0x407b7090" scoped=""/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" ref="0x407c7010" scoped=""/>
        <function-ref name="fired" ref="0x407c8610" scoped=""/>
        <function-ref name="get" ref="0x407c80f8" scoped=""/>
        <function-ref name="reset" ref="0x407c8888" scoped=""/>
        <function-ref name="isOn" ref="0x407c7288" scoped=""/>
        <function-ref name="set" ref="0x407c8370" scoped=""/>
        <function-ref name="start" ref="0x407c8b00" scoped=""/>
        <function-ref name="stop" ref="0x407c8d78" scoped=""/>
      </interface-functions>
    </interface><interface loc="57:/home/ubuntu/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" name="HplAtm128Timer" provided="0" ref="0x407b46d8">
      <component-ref nicename="tos.chips.atm128.timer.Atm128AlarmC" qname="Atm128AlarmC"/>
      <type-interface alignment="I:1" size="I:2"><interface-ref name="HplAtm128Timer" ref="0x407b46d8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.chips.atm128.timer.HplAtm128Timer" qname="HplAtm128Timer"/>
        <arguments>
          <type-var alignment="U:" size="U:"><typedef-ref name="timer_size" ref="0x407b7090" scoped=""/></type-var>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" ref="0x407b21a0" scoped=""/>
        <function-ref name="test" ref="0x407b3c90" scoped=""/>
        <function-ref name="get" ref="0x407b4d20" scoped=""/>
        <function-ref name="setScale" ref="0x407b2418" scoped=""/>
        <function-ref name="getScale" ref="0x407b26b8" scoped=""/>
        <function-ref name="reset" ref="0x407b3528" scoped=""/>
        <function-ref name="overflow" ref="0x407b32b0" scoped=""/>
        <function-ref name="isOn" ref="0x407b3f08" scoped=""/>
        <function-ref name="set" ref="0x407b3010" scoped=""/>
        <function-ref name="start" ref="0x407b37a0" scoped=""/>
        <function-ref name="stop" ref="0x407b3a18" scoped=""/>
      </interface-functions>
    </interface></specification><referenced/></component>